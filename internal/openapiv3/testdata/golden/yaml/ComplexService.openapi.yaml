openapi: 3.1.0
info:
    title: ComplexService API
    version: 1.0.0
paths:
    /ComplexService/ProcessComplex:
        post:
            tags:
                - ComplexService
            summary: ProcessComplex
            description: Process complex data
            operationId: ProcessComplex
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ComplexRequest'
                required: true
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ComplexResponse'
                default:
                    description: Error response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                    code:
                                        type: integer
    /ComplexService/ValidateComplex:
        post:
            tags:
                - ComplexService
            summary: ValidateComplex
            description: Validate complex data
            operationId: ValidateComplex
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ComplexRequest'
                required: true
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ComplexResponse'
                default:
                    description: Error response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                    code:
                                        type: integer
components:
    schemas:
        Address:
            type: object
            properties:
                street:
                    type: string
                    description: Street address
                city:
                    type: string
                    description: City name
                state:
                    type: string
                    description: State or province
                postalCode:
                    type: string
                    description: Postal code
                country:
                    type: string
                    description: Country name
            description: Nested message for testing message references
        UserProfile:
            type: object
            properties:
                avatarUrl:
                    type: string
                    description: Profile avatar URL
                bio:
                    type: string
                    description: User bio or description
                language:
                    type: string
                    description: User's preferred language (ISO 639-1)
                timezone:
                    type: string
                    description: User's timezone
            description: User profile message
        ComplexMessage:
            type: object
            properties:
                text:
                    type: string
                    description: String field
                flag:
                    type: boolean
                    description: Boolean field
                int32Value:
                    type: integer
                    format: int32
                    description: 32-bit signed integer
                int64Value:
                    type: integer
                    format: int64
                    description: 64-bit signed integer
                uint32Value:
                    type: integer
                    minimum: 0
                    format: int32
                    description: 32-bit unsigned integer
                uint64Value:
                    type: integer
                    minimum: 0
                    format: int64
                    description: 64-bit unsigned integer
                sint32Value:
                    type: integer
                    format: int32
                    description: 32-bit signed integer (sint32 encoding)
                sint64Value:
                    type: integer
                    format: int64
                    description: 64-bit signed integer (sint64 encoding)
                fixed32Value:
                    type: integer
                    minimum: 0
                    format: int32
                    description: 32-bit fixed integer
                fixed64Value:
                    type: integer
                    minimum: 0
                    format: int64
                    description: 64-bit fixed integer
                sfixed32Value:
                    type: integer
                    format: int32
                    description: 32-bit signed fixed integer
                sfixed64Value:
                    type: integer
                    format: int64
                    description: 64-bit signed fixed integer
                floatValue:
                    type: number
                    format: float
                    description: 32-bit floating point
                doubleValue:
                    type: number
                    format: double
                    description: 64-bit floating point
                bytesValue:
                    type: string
                    format: byte
                    description: Binary data
                status:
                    type: string
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_ACTIVE
                        - STATUS_INACTIVE
                        - STATUS_PENDING
                    description: Status enum for testing enum conversion
                priority:
                    type: string
                    enum:
                        - PRIORITY_UNSPECIFIED
                        - PRIORITY_LOW
                        - PRIORITY_MEDIUM
                        - PRIORITY_HIGH
                        - PRIORITY_URGENT
                    description: Priority enum with comments
                tags:
                    type: array
                    items:
                        type: string
                        description: Array of strings
                numbers:
                    type: array
                    items:
                        type: integer
                        format: int32
                        description: Array of integers
                statuses:
                    type: array
                    items:
                        type: string
                        enum:
                            - STATUS_UNSPECIFIED
                            - STATUS_ACTIVE
                            - STATUS_INACTIVE
                            - STATUS_PENDING
                        description: Status enum for testing enum conversion
                addresses:
                    type: array
                    items:
                        $ref: '#/components/schemas/Address'
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                    description: String to string map
                counters:
                    type: object
                    additionalProperties:
                        type: integer
                        format: int32
                    description: String to integer map
                profiles:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/UserProfile'
                    description: String to message map
                primaryAddress:
                    $ref: '#/components/schemas/Address'
                profile:
                    $ref: '#/components/schemas/UserProfile'
                optionalText:
                    type: string
                    description: Optional string (proto3 optional)
                optionalNumber:
                    type: integer
                    format: int32
                    description: Optional integer
                optionalAddress:
                    $ref: '#/components/schemas/Address'
                email:
                    type: string
                phone:
                    type: string
                slackHandle:
                    type: string
            description: Complex message testing all field types
        MetadataEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
        CountersEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: integer
                    format: int32
        ProfilesEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/UserProfile'
        ComplexRequest:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/ComplexMessage'
                requestId:
                    type: string
                    description: Request ID
            description: Request message using complex types
        ComplexResponse:
            type: object
            properties:
                result:
                    $ref: '#/components/schemas/ComplexMessage'
                processingStatus:
                    type: string
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_ACTIVE
                        - STATUS_INACTIVE
                        - STATUS_PENDING
                    description: Status enum for testing enum conversion
                errorMessage:
                    type: string
                    description: Error message if any
            description: Response message
