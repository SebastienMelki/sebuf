// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: sebuf/http/errors.proto

package http

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HTTPStatusCode represents standard HTTP status codes for errors
type HTTPStatusCode int32

const (
	HTTPStatusCode_HTTP_STATUS_CODE_UNSPECIFIED HTTPStatusCode = 0
	// 4xx Client Errors
	HTTPStatusCode_BAD_REQUEST                   HTTPStatusCode = 400
	HTTPStatusCode_UNAUTHORIZED                  HTTPStatusCode = 401
	HTTPStatusCode_PAYMENT_REQUIRED              HTTPStatusCode = 402
	HTTPStatusCode_FORBIDDEN                     HTTPStatusCode = 403
	HTTPStatusCode_NOT_FOUND                     HTTPStatusCode = 404
	HTTPStatusCode_METHOD_NOT_ALLOWED            HTTPStatusCode = 405
	HTTPStatusCode_NOT_ACCEPTABLE                HTTPStatusCode = 406
	HTTPStatusCode_PROXY_AUTHENTICATION_REQUIRED HTTPStatusCode = 407
	HTTPStatusCode_REQUEST_TIMEOUT               HTTPStatusCode = 408
	HTTPStatusCode_CONFLICT                      HTTPStatusCode = 409
	HTTPStatusCode_GONE                          HTTPStatusCode = 410
	HTTPStatusCode_LENGTH_REQUIRED               HTTPStatusCode = 411
	HTTPStatusCode_PRECONDITION_FAILED           HTTPStatusCode = 412
	HTTPStatusCode_PAYLOAD_TOO_LARGE             HTTPStatusCode = 413
	HTTPStatusCode_URI_TOO_LONG                  HTTPStatusCode = 414
	HTTPStatusCode_UNSUPPORTED_MEDIA_TYPE        HTTPStatusCode = 415
	HTTPStatusCode_RANGE_NOT_SATISFIABLE         HTTPStatusCode = 416
	HTTPStatusCode_EXPECTATION_FAILED            HTTPStatusCode = 417
	HTTPStatusCode_UNPROCESSABLE_ENTITY          HTTPStatusCode = 422
	HTTPStatusCode_TOO_MANY_REQUESTS             HTTPStatusCode = 429
	// 5xx Server Errors
	HTTPStatusCode_INTERNAL_SERVER_ERROR      HTTPStatusCode = 500
	HTTPStatusCode_NOT_IMPLEMENTED            HTTPStatusCode = 501
	HTTPStatusCode_BAD_GATEWAY                HTTPStatusCode = 502
	HTTPStatusCode_SERVICE_UNAVAILABLE        HTTPStatusCode = 503
	HTTPStatusCode_GATEWAY_TIMEOUT            HTTPStatusCode = 504
	HTTPStatusCode_HTTP_VERSION_NOT_SUPPORTED HTTPStatusCode = 505
)

// Enum value maps for HTTPStatusCode.
var (
	HTTPStatusCode_name = map[int32]string{
		0:   "HTTP_STATUS_CODE_UNSPECIFIED",
		400: "BAD_REQUEST",
		401: "UNAUTHORIZED",
		402: "PAYMENT_REQUIRED",
		403: "FORBIDDEN",
		404: "NOT_FOUND",
		405: "METHOD_NOT_ALLOWED",
		406: "NOT_ACCEPTABLE",
		407: "PROXY_AUTHENTICATION_REQUIRED",
		408: "REQUEST_TIMEOUT",
		409: "CONFLICT",
		410: "GONE",
		411: "LENGTH_REQUIRED",
		412: "PRECONDITION_FAILED",
		413: "PAYLOAD_TOO_LARGE",
		414: "URI_TOO_LONG",
		415: "UNSUPPORTED_MEDIA_TYPE",
		416: "RANGE_NOT_SATISFIABLE",
		417: "EXPECTATION_FAILED",
		422: "UNPROCESSABLE_ENTITY",
		429: "TOO_MANY_REQUESTS",
		500: "INTERNAL_SERVER_ERROR",
		501: "NOT_IMPLEMENTED",
		502: "BAD_GATEWAY",
		503: "SERVICE_UNAVAILABLE",
		504: "GATEWAY_TIMEOUT",
		505: "HTTP_VERSION_NOT_SUPPORTED",
	}
	HTTPStatusCode_value = map[string]int32{
		"HTTP_STATUS_CODE_UNSPECIFIED":  0,
		"BAD_REQUEST":                   400,
		"UNAUTHORIZED":                  401,
		"PAYMENT_REQUIRED":              402,
		"FORBIDDEN":                     403,
		"NOT_FOUND":                     404,
		"METHOD_NOT_ALLOWED":            405,
		"NOT_ACCEPTABLE":                406,
		"PROXY_AUTHENTICATION_REQUIRED": 407,
		"REQUEST_TIMEOUT":               408,
		"CONFLICT":                      409,
		"GONE":                          410,
		"LENGTH_REQUIRED":               411,
		"PRECONDITION_FAILED":           412,
		"PAYLOAD_TOO_LARGE":             413,
		"URI_TOO_LONG":                  414,
		"UNSUPPORTED_MEDIA_TYPE":        415,
		"RANGE_NOT_SATISFIABLE":         416,
		"EXPECTATION_FAILED":            417,
		"UNPROCESSABLE_ENTITY":          422,
		"TOO_MANY_REQUESTS":             429,
		"INTERNAL_SERVER_ERROR":         500,
		"NOT_IMPLEMENTED":               501,
		"BAD_GATEWAY":                   502,
		"SERVICE_UNAVAILABLE":           503,
		"GATEWAY_TIMEOUT":               504,
		"HTTP_VERSION_NOT_SUPPORTED":    505,
	}
)

func (x HTTPStatusCode) Enum() *HTTPStatusCode {
	p := new(HTTPStatusCode)
	*p = x
	return p
}

func (x HTTPStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sebuf_http_errors_proto_enumTypes[0].Descriptor()
}

func (HTTPStatusCode) Type() protoreflect.EnumType {
	return &file_sebuf_http_errors_proto_enumTypes[0]
}

func (x HTTPStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPStatusCode.Descriptor instead.
func (HTTPStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_sebuf_http_errors_proto_rawDescGZIP(), []int{0}
}

// ValidationError represents a validation failure with detailed field/header violations
type ValidationError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Overall validation error message
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// List of specific validation violations
	Violations    []*ValidationError_Violation `protobuf:"bytes,2,rep,name=violations,proto3" json:"violations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_sebuf_http_errors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_sebuf_http_errors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_sebuf_http_errors_proto_rawDescGZIP(), []int{0}
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationError) GetViolations() []*ValidationError_Violation {
	if x != nil {
		return x.Violations
	}
	return nil
}

// StandardError represents a standard error response with HTTP status code
type StandardError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HTTP status code for the error
	Code HTTPStatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=sebuf.http.HTTPStatusCode" json:"code,omitempty"`
	// Error message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StandardError) Reset() {
	*x = StandardError{}
	mi := &file_sebuf_http_errors_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StandardError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardError) ProtoMessage() {}

func (x *StandardError) ProtoReflect() protoreflect.Message {
	mi := &file_sebuf_http_errors_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardError.ProtoReflect.Descriptor instead.
func (*StandardError) Descriptor() ([]byte, []int) {
	return file_sebuf_http_errors_proto_rawDescGZIP(), []int{1}
}

func (x *StandardError) GetCode() HTTPStatusCode {
	if x != nil {
		return x.Code
	}
	return HTTPStatusCode_HTTP_STATUS_CODE_UNSPECIFIED
}

func (x *StandardError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Violation represents a single validation failure
type ValidationError_Violation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of violation (body field or header)
	//
	// Types that are valid to be assigned to ViolationType:
	//
	//	*ValidationError_Violation_Body
	//	*ValidationError_Violation_Header
	ViolationType isValidationError_Violation_ViolationType `protobuf_oneof:"violation_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError_Violation) Reset() {
	*x = ValidationError_Violation{}
	mi := &file_sebuf_http_errors_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError_Violation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError_Violation) ProtoMessage() {}

func (x *ValidationError_Violation) ProtoReflect() protoreflect.Message {
	mi := &file_sebuf_http_errors_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError_Violation.ProtoReflect.Descriptor instead.
func (*ValidationError_Violation) Descriptor() ([]byte, []int) {
	return file_sebuf_http_errors_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ValidationError_Violation) GetViolationType() isValidationError_Violation_ViolationType {
	if x != nil {
		return x.ViolationType
	}
	return nil
}

func (x *ValidationError_Violation) GetBody() *ValidationError_BodyViolation {
	if x != nil {
		if x, ok := x.ViolationType.(*ValidationError_Violation_Body); ok {
			return x.Body
		}
	}
	return nil
}

func (x *ValidationError_Violation) GetHeader() *ValidationError_HeaderViolation {
	if x != nil {
		if x, ok := x.ViolationType.(*ValidationError_Violation_Header); ok {
			return x.Header
		}
	}
	return nil
}

type isValidationError_Violation_ViolationType interface {
	isValidationError_Violation_ViolationType()
}

type ValidationError_Violation_Body struct {
	Body *ValidationError_BodyViolation `protobuf:"bytes,1,opt,name=body,proto3,oneof"`
}

type ValidationError_Violation_Header struct {
	Header *ValidationError_HeaderViolation `protobuf:"bytes,2,opt,name=header,proto3,oneof"`
}

func (*ValidationError_Violation_Body) isValidationError_Violation_ViolationType() {}

func (*ValidationError_Violation_Header) isValidationError_Violation_ViolationType() {}

// BodyViolation represents a validation failure for a request body field
type ValidationError_BodyViolation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field path (e.g., "user.email" for nested fields)
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Human-readable description of the violation
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The constraint that was violated (e.g., "string.min_len", "required")
	Constraint    string `protobuf:"bytes,3,opt,name=constraint,proto3" json:"constraint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError_BodyViolation) Reset() {
	*x = ValidationError_BodyViolation{}
	mi := &file_sebuf_http_errors_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError_BodyViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError_BodyViolation) ProtoMessage() {}

func (x *ValidationError_BodyViolation) ProtoReflect() protoreflect.Message {
	mi := &file_sebuf_http_errors_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError_BodyViolation.ProtoReflect.Descriptor instead.
func (*ValidationError_BodyViolation) Descriptor() ([]byte, []int) {
	return file_sebuf_http_errors_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ValidationError_BodyViolation) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationError_BodyViolation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ValidationError_BodyViolation) GetConstraint() string {
	if x != nil {
		return x.Constraint
	}
	return ""
}

// HeaderViolation represents a validation failure for an HTTP header
type ValidationError_HeaderViolation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Header name (e.g., "X-API-Key")
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable description of the violation
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Expected format or value (e.g., "UUID", "RFC3339 timestamp")
	Expected      string `protobuf:"bytes,3,opt,name=expected,proto3" json:"expected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError_HeaderViolation) Reset() {
	*x = ValidationError_HeaderViolation{}
	mi := &file_sebuf_http_errors_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError_HeaderViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError_HeaderViolation) ProtoMessage() {}

func (x *ValidationError_HeaderViolation) ProtoReflect() protoreflect.Message {
	mi := &file_sebuf_http_errors_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError_HeaderViolation.ProtoReflect.Descriptor instead.
func (*ValidationError_HeaderViolation) Descriptor() ([]byte, []int) {
	return file_sebuf_http_errors_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ValidationError_HeaderViolation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValidationError_HeaderViolation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ValidationError_HeaderViolation) GetExpected() string {
	if x != nil {
		return x.Expected
	}
	return ""
}

var File_sebuf_http_errors_proto protoreflect.FileDescriptor

const file_sebuf_http_errors_proto_rawDesc = "" +
	"\n" +
	"\x17sebuf/http/errors.proto\x12\n" +
	"sebuf.http\"\xe8\x03\n" +
	"\x0fValidationError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12E\n" +
	"\n" +
	"violations\x18\x02 \x03(\v2%.sebuf.http.ValidationError.ViolationR\n" +
	"violations\x1a\xa5\x01\n" +
	"\tViolation\x12?\n" +
	"\x04body\x18\x01 \x01(\v2).sebuf.http.ValidationError.BodyViolationH\x00R\x04body\x12E\n" +
	"\x06header\x18\x02 \x01(\v2+.sebuf.http.ValidationError.HeaderViolationH\x00R\x06headerB\x10\n" +
	"\x0eviolation_type\x1ag\n" +
	"\rBodyViolation\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"constraint\x18\x03 \x01(\tR\n" +
	"constraint\x1ac\n" +
	"\x0fHeaderViolation\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\bexpected\x18\x03 \x01(\tR\bexpected\"Y\n" +
	"\rStandardError\x12.\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1a.sebuf.http.HTTPStatusCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\x85\x05\n" +
	"\x0eHTTPStatusCode\x12 \n" +
	"\x1cHTTP_STATUS_CODE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\vBAD_REQUEST\x10\x90\x03\x12\x11\n" +
	"\fUNAUTHORIZED\x10\x91\x03\x12\x15\n" +
	"\x10PAYMENT_REQUIRED\x10\x92\x03\x12\x0e\n" +
	"\tFORBIDDEN\x10\x93\x03\x12\x0e\n" +
	"\tNOT_FOUND\x10\x94\x03\x12\x17\n" +
	"\x12METHOD_NOT_ALLOWED\x10\x95\x03\x12\x13\n" +
	"\x0eNOT_ACCEPTABLE\x10\x96\x03\x12\"\n" +
	"\x1dPROXY_AUTHENTICATION_REQUIRED\x10\x97\x03\x12\x14\n" +
	"\x0fREQUEST_TIMEOUT\x10\x98\x03\x12\r\n" +
	"\bCONFLICT\x10\x99\x03\x12\t\n" +
	"\x04GONE\x10\x9a\x03\x12\x14\n" +
	"\x0fLENGTH_REQUIRED\x10\x9b\x03\x12\x18\n" +
	"\x13PRECONDITION_FAILED\x10\x9c\x03\x12\x16\n" +
	"\x11PAYLOAD_TOO_LARGE\x10\x9d\x03\x12\x11\n" +
	"\fURI_TOO_LONG\x10\x9e\x03\x12\x1b\n" +
	"\x16UNSUPPORTED_MEDIA_TYPE\x10\x9f\x03\x12\x1a\n" +
	"\x15RANGE_NOT_SATISFIABLE\x10\xa0\x03\x12\x17\n" +
	"\x12EXPECTATION_FAILED\x10\xa1\x03\x12\x19\n" +
	"\x14UNPROCESSABLE_ENTITY\x10\xa6\x03\x12\x16\n" +
	"\x11TOO_MANY_REQUESTS\x10\xad\x03\x12\x1a\n" +
	"\x15INTERNAL_SERVER_ERROR\x10\xf4\x03\x12\x14\n" +
	"\x0fNOT_IMPLEMENTED\x10\xf5\x03\x12\x10\n" +
	"\vBAD_GATEWAY\x10\xf6\x03\x12\x18\n" +
	"\x13SERVICE_UNAVAILABLE\x10\xf7\x03\x12\x14\n" +
	"\x0fGATEWAY_TIMEOUT\x10\xf8\x03\x12\x1f\n" +
	"\x1aHTTP_VERSION_NOT_SUPPORTED\x10\xf9\x03B+Z)github.com/SebastienMelki/sebuf/http;httpb\x06proto3"

var (
	file_sebuf_http_errors_proto_rawDescOnce sync.Once
	file_sebuf_http_errors_proto_rawDescData []byte
)

func file_sebuf_http_errors_proto_rawDescGZIP() []byte {
	file_sebuf_http_errors_proto_rawDescOnce.Do(func() {
		file_sebuf_http_errors_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sebuf_http_errors_proto_rawDesc), len(file_sebuf_http_errors_proto_rawDesc)))
	})
	return file_sebuf_http_errors_proto_rawDescData
}

var file_sebuf_http_errors_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sebuf_http_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_sebuf_http_errors_proto_goTypes = []any{
	(HTTPStatusCode)(0),                     // 0: sebuf.http.HTTPStatusCode
	(*ValidationError)(nil),                 // 1: sebuf.http.ValidationError
	(*StandardError)(nil),                   // 2: sebuf.http.StandardError
	(*ValidationError_Violation)(nil),       // 3: sebuf.http.ValidationError.Violation
	(*ValidationError_BodyViolation)(nil),   // 4: sebuf.http.ValidationError.BodyViolation
	(*ValidationError_HeaderViolation)(nil), // 5: sebuf.http.ValidationError.HeaderViolation
}
var file_sebuf_http_errors_proto_depIdxs = []int32{
	3, // 0: sebuf.http.ValidationError.violations:type_name -> sebuf.http.ValidationError.Violation
	0, // 1: sebuf.http.StandardError.code:type_name -> sebuf.http.HTTPStatusCode
	4, // 2: sebuf.http.ValidationError.Violation.body:type_name -> sebuf.http.ValidationError.BodyViolation
	5, // 3: sebuf.http.ValidationError.Violation.header:type_name -> sebuf.http.ValidationError.HeaderViolation
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_sebuf_http_errors_proto_init() }
func file_sebuf_http_errors_proto_init() {
	if File_sebuf_http_errors_proto != nil {
		return
	}
	file_sebuf_http_errors_proto_msgTypes[2].OneofWrappers = []any{
		(*ValidationError_Violation_Body)(nil),
		(*ValidationError_Violation_Header)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sebuf_http_errors_proto_rawDesc), len(file_sebuf_http_errors_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sebuf_http_errors_proto_goTypes,
		DependencyIndexes: file_sebuf_http_errors_proto_depIdxs,
		EnumInfos:         file_sebuf_http_errors_proto_enumTypes,
		MessageInfos:      file_sebuf_http_errors_proto_msgTypes,
	}.Build()
	File_sebuf_http_errors_proto = out.File
	file_sebuf_http_errors_proto_goTypes = nil
	file_sebuf_http_errors_proto_depIdxs = nil
}
