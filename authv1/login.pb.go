// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: anghamak/osn/auth/v1/login.proto

package authv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Method:
	//
	//	*LoginMethod_Email
	//	*LoginMethod_PhoneNumber
	//	*LoginMethod_Google
	//	*LoginMethod_Facebook
	//	*LoginMethod_Apple
	//	*LoginMethod_LoginCode
	//	*LoginMethod_Anghami
	Method isLoginMethod_Method `protobuf_oneof:"method"`
}

func (x *LoginMethod) Reset() {
	*x = LoginMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMethod) ProtoMessage() {}

func (x *LoginMethod) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMethod.ProtoReflect.Descriptor instead.
func (*LoginMethod) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{0}
}

func (m *LoginMethod) GetMethod() isLoginMethod_Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (x *LoginMethod) GetEmail() *LoginMethod_WithEmail {
	if x, ok := x.GetMethod().(*LoginMethod_Email); ok {
		return x.Email
	}
	return nil
}

func (x *LoginMethod) GetPhoneNumber() *LoginMethod_WithPhoneNumber {
	if x, ok := x.GetMethod().(*LoginMethod_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return nil
}

func (x *LoginMethod) GetGoogle() *LoginMethod_WithGoogle {
	if x, ok := x.GetMethod().(*LoginMethod_Google); ok {
		return x.Google
	}
	return nil
}

func (x *LoginMethod) GetFacebook() *LoginMethod_WithFacebook {
	if x, ok := x.GetMethod().(*LoginMethod_Facebook); ok {
		return x.Facebook
	}
	return nil
}

func (x *LoginMethod) GetApple() *LoginMethod_WithApple {
	if x, ok := x.GetMethod().(*LoginMethod_Apple); ok {
		return x.Apple
	}
	return nil
}

func (x *LoginMethod) GetLoginCode() *LoginMethod_WithLoginCode {
	if x, ok := x.GetMethod().(*LoginMethod_LoginCode); ok {
		return x.LoginCode
	}
	return nil
}

func (x *LoginMethod) GetAnghami() *LoginMethod_WithAnghami {
	if x, ok := x.GetMethod().(*LoginMethod_Anghami); ok {
		return x.Anghami
	}
	return nil
}

type isLoginMethod_Method interface {
	isLoginMethod_Method()
}

type LoginMethod_Email struct {
	Email *LoginMethod_WithEmail `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type LoginMethod_PhoneNumber struct {
	PhoneNumber *LoginMethod_WithPhoneNumber `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

type LoginMethod_Google struct {
	Google *LoginMethod_WithGoogle `protobuf:"bytes,3,opt,name=google,proto3,oneof"`
}

type LoginMethod_Facebook struct {
	Facebook *LoginMethod_WithFacebook `protobuf:"bytes,4,opt,name=facebook,proto3,oneof"`
}

type LoginMethod_Apple struct {
	Apple *LoginMethod_WithApple `protobuf:"bytes,5,opt,name=apple,proto3,oneof"`
}

type LoginMethod_LoginCode struct {
	LoginCode *LoginMethod_WithLoginCode `protobuf:"bytes,6,opt,name=login_code,json=loginCode,proto3,oneof"`
}

type LoginMethod_Anghami struct {
	Anghami *LoginMethod_WithAnghami `protobuf:"bytes,7,opt,name=anghami,proto3,oneof"`
}

func (*LoginMethod_Email) isLoginMethod_Method() {}

func (*LoginMethod_PhoneNumber) isLoginMethod_Method() {}

func (*LoginMethod_Google) isLoginMethod_Method() {}

func (*LoginMethod_Facebook) isLoginMethod_Method() {}

func (*LoginMethod_Apple) isLoginMethod_Method() {}

func (*LoginMethod_LoginCode) isLoginMethod_Method() {}

func (*LoginMethod_Anghami) isLoginMethod_Method() {}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginMethod *LoginMethod `protobuf:"bytes,1,opt,name=login_method,json=loginMethod,proto3" json:"login_method,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{1}
}

func (x *LoginRequest) GetLoginMethod() *LoginMethod {
	if x != nil {
		return x.LoginMethod
	}
	return nil
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token can be used to authenticate requests
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// refresh_token can be used to get a new token
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// expires_at is the time in seconds since epoch when the token will expire
	ExpiresAt int64 `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// new_user will be true if the this is the first login for the user
	NewUser bool `protobuf:"varint,4,opt,name=new_user,json=newUser,proto3" json:"new_user,omitempty"`
	// new_user_details will be set if new_user is true, can be ignored if new_user is false
	SignupDetails *LoginResponse_SignupDetails `protobuf:"bytes,5,opt,name=signup_details,json=signupDetails,proto3" json:"signup_details,omitempty"`
	// user_id is the unique identifier of the user across OSN and Anghami
	UserId string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// logged_in indicates whether the user was successfully logged in or not
	LoggedIn bool `protobuf:"varint,7,opt,name=logged_in,json=loggedIn,proto3" json:"logged_in,omitempty"`
	// failure_message will be set if logged_in is false, can be ignored if logged_in is true
	FailureMessage string `protobuf:"bytes,8,opt,name=failure_message,json=failureMessage,proto3" json:"failure_message,omitempty"`
	// is_account_disabled represents whether an account is disabled or not.
	// accounts that are disabled can only be used in case they got restored.
	// the access token of a disabled account can ONLY be used for the endpoint that restores an account.
	// the access token of a disabled account will not work for endpoints that require authentication.
	IsAccountDisabled bool `protobuf:"varint,9,opt,name=is_account_disabled,json=isAccountDisabled,proto3" json:"is_account_disabled,omitempty"`
	// failure_code is an identifier for the failure reason of an unsuccessful login
	// it is set along side with failure_message, empty when when successful login
	// it is relevant for TV clients to distinguish polling error (incorrect code)
	// vs other "post-scan" errors that need to be displayed to the user
	FailureCode string `protobuf:"bytes,10,opt,name=failure_code,json=failureCode,proto3" json:"failure_code,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{2}
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *LoginResponse) GetNewUser() bool {
	if x != nil {
		return x.NewUser
	}
	return false
}

func (x *LoginResponse) GetSignupDetails() *LoginResponse_SignupDetails {
	if x != nil {
		return x.SignupDetails
	}
	return nil
}

func (x *LoginResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginResponse) GetLoggedIn() bool {
	if x != nil {
		return x.LoggedIn
	}
	return false
}

func (x *LoginResponse) GetFailureMessage() string {
	if x != nil {
		return x.FailureMessage
	}
	return ""
}

func (x *LoginResponse) GetIsAccountDisabled() bool {
	if x != nil {
		return x.IsAccountDisabled
	}
	return false
}

func (x *LoginResponse) GetFailureCode() string {
	if x != nil {
		return x.FailureCode
	}
	return ""
}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// refresh_token can be used to get a new token as long as it is not expired
	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{3}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type RefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token can be used to authenticate requests
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// refresh_token can be used to get a new token
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// expires_at is the time in seconds since epoch when the token will expire
	ExpiresAt int64 `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{4}
}

func (x *RefreshTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RefreshTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type ValidateAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateAccessTokenRequest) Reset() {
	*x = ValidateAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccessTokenRequest) ProtoMessage() {}

func (x *ValidateAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*ValidateAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{5}
}

type ValidateAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid bool   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ValidateAccessTokenResponse) Reset() {
	*x = ValidateAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccessTokenResponse) ProtoMessage() {}

func (x *ValidateAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*ValidateAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{6}
}

func (x *ValidateAccessTokenResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateAccessTokenResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GenerateLoginCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateLoginCodeRequest) Reset() {
	*x = GenerateLoginCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateLoginCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLoginCodeRequest) ProtoMessage() {}

func (x *GenerateLoginCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLoginCodeRequest.ProtoReflect.Descriptor instead.
func (*GenerateLoginCodeRequest) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{7}
}

type GenerateLoginCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code to be consumed by an authenticated user to be able to login on another device.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// expires_at is the time in seconds since epoch when the code will expire.
	ExpiresAt int64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// success indicates whether the code was generated successfully or not.
	Success bool `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	// deeplink for TV login.
	// This deeplink is used to generate a qr code from the client-side
	// it could either redirect the client to the application he has or the web login page
	TvLoginLink string `protobuf:"bytes,4,opt,name=tv_login_link,json=tvLoginLink,proto3" json:"tv_login_link,omitempty"`
}

func (x *GenerateLoginCodeResponse) Reset() {
	*x = GenerateLoginCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateLoginCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLoginCodeResponse) ProtoMessage() {}

func (x *GenerateLoginCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLoginCodeResponse.ProtoReflect.Descriptor instead.
func (*GenerateLoginCodeResponse) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{8}
}

func (x *GenerateLoginCodeResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GenerateLoginCodeResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *GenerateLoginCodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GenerateLoginCodeResponse) GetTvLoginLink() string {
	if x != nil {
		return x.TvLoginLink
	}
	return ""
}

type ConsumeLoginCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code to be consumed by an authenticated user.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ConsumeLoginCodeRequest) Reset() {
	*x = ConsumeLoginCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeLoginCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeLoginCodeRequest) ProtoMessage() {}

func (x *ConsumeLoginCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeLoginCodeRequest.ProtoReflect.Descriptor instead.
func (*ConsumeLoginCodeRequest) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{9}
}

func (x *ConsumeLoginCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ConsumeLoginCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success indicates whether the code was consumed successfully or not.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ConsumeLoginCodeResponse) Reset() {
	*x = ConsumeLoginCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeLoginCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeLoginCodeResponse) ProtoMessage() {}

func (x *ConsumeLoginCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeLoginCodeResponse.ProtoReflect.Descriptor instead.
func (*ConsumeLoginCodeResponse) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{10}
}

func (x *ConsumeLoginCodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetAppConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAppConfigurationRequest) Reset() {
	*x = GetAppConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigurationRequest) ProtoMessage() {}

func (x *GetAppConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetAppConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{11}
}

type GetAppConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// condition for whether a user can skip login on their TV.
	TvLoginSkipEligible bool `protobuf:"varint,1,opt,name=tv_login_skip_eligible,json=tvLoginSkipEligible,proto3" json:"tv_login_skip_eligible,omitempty"`
}

func (x *GetAppConfigurationResponse) Reset() {
	*x = GetAppConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigurationResponse) ProtoMessage() {}

func (x *GetAppConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetAppConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppConfigurationResponse) GetTvLoginSkipEligible() bool {
	if x != nil {
		return x.TvLoginSkipEligible
	}
	return false
}

type LoginMethod_WithEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email is the email address of the user
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// otp is the one time password sent to the user
	Otp string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (x *LoginMethod_WithEmail) Reset() {
	*x = LoginMethod_WithEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMethod_WithEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMethod_WithEmail) ProtoMessage() {}

func (x *LoginMethod_WithEmail) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMethod_WithEmail.ProtoReflect.Descriptor instead.
func (*LoginMethod_WithEmail) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LoginMethod_WithEmail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginMethod_WithEmail) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type LoginMethod_WithPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// phone number with country code: example +971585997292
	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// otp is the one time password sent to the user
	Otp string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (x *LoginMethod_WithPhoneNumber) Reset() {
	*x = LoginMethod_WithPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMethod_WithPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMethod_WithPhoneNumber) ProtoMessage() {}

func (x *LoginMethod_WithPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMethod_WithPhoneNumber.ProtoReflect.Descriptor instead.
func (*LoginMethod_WithPhoneNumber) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{0, 1}
}

func (x *LoginMethod_WithPhoneNumber) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *LoginMethod_WithPhoneNumber) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type LoginMethod_WithGoogle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token is the google token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginMethod_WithGoogle) Reset() {
	*x = LoginMethod_WithGoogle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMethod_WithGoogle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMethod_WithGoogle) ProtoMessage() {}

func (x *LoginMethod_WithGoogle) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMethod_WithGoogle.ProtoReflect.Descriptor instead.
func (*LoginMethod_WithGoogle) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{0, 2}
}

func (x *LoginMethod_WithGoogle) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LoginMethod_WithFacebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// facebook_id is deprecated, it is no longer needed in order to login
	// it can be derived from the facebook_token by the server
	//
	// Deprecated: Marked as deprecated in anghamak/osn/auth/v1/login.proto.
	FacebookId string `protobuf:"bytes,1,opt,name=facebook_id,json=facebookId,proto3" json:"facebook_id,omitempty"`
	// facebook_token is the facebook token
	FacebookToken string `protobuf:"bytes,2,opt,name=facebook_token,json=facebookToken,proto3" json:"facebook_token,omitempty"`
}

func (x *LoginMethod_WithFacebook) Reset() {
	*x = LoginMethod_WithFacebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMethod_WithFacebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMethod_WithFacebook) ProtoMessage() {}

func (x *LoginMethod_WithFacebook) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMethod_WithFacebook.ProtoReflect.Descriptor instead.
func (*LoginMethod_WithFacebook) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{0, 3}
}

// Deprecated: Marked as deprecated in anghamak/osn/auth/v1/login.proto.
func (x *LoginMethod_WithFacebook) GetFacebookId() string {
	if x != nil {
		return x.FacebookId
	}
	return ""
}

func (x *LoginMethod_WithFacebook) GetFacebookToken() string {
	if x != nil {
		return x.FacebookToken
	}
	return ""
}

type LoginMethod_WithApple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// identity_token is the identity token returned from apple
	IdentityToken string `protobuf:"bytes,1,opt,name=identity_token,json=identityToken,proto3" json:"identity_token,omitempty"`
	// apple_id is deprecated, it is no longer needed in order to login
	// it can be derived from the identity_token by the server
	//
	// Deprecated: Marked as deprecated in anghamak/osn/auth/v1/login.proto.
	AppleId string `protobuf:"bytes,2,opt,name=apple_id,json=appleId,proto3" json:"apple_id,omitempty"`
	// email is deprecated, it is no longer needed in order to login
	// it can be derived from the identity_token by the server
	//
	// Deprecated: Marked as deprecated in anghamak/osn/auth/v1/login.proto.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *LoginMethod_WithApple) Reset() {
	*x = LoginMethod_WithApple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMethod_WithApple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMethod_WithApple) ProtoMessage() {}

func (x *LoginMethod_WithApple) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMethod_WithApple.ProtoReflect.Descriptor instead.
func (*LoginMethod_WithApple) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{0, 4}
}

func (x *LoginMethod_WithApple) GetIdentityToken() string {
	if x != nil {
		return x.IdentityToken
	}
	return ""
}

// Deprecated: Marked as deprecated in anghamak/osn/auth/v1/login.proto.
func (x *LoginMethod_WithApple) GetAppleId() string {
	if x != nil {
		return x.AppleId
	}
	return ""
}

// Deprecated: Marked as deprecated in anghamak/osn/auth/v1/login.proto.
func (x *LoginMethod_WithApple) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type LoginMethod_WithLoginCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code that was previously consumed by an authenticated user.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *LoginMethod_WithLoginCode) Reset() {
	*x = LoginMethod_WithLoginCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMethod_WithLoginCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMethod_WithLoginCode) ProtoMessage() {}

func (x *LoginMethod_WithLoginCode) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMethod_WithLoginCode.ProtoReflect.Descriptor instead.
func (*LoginMethod_WithLoginCode) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{0, 5}
}

func (x *LoginMethod_WithLoginCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LoginMethod_WithAnghami struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anghami_session_id is the session id of the user in anghami
	AnghamiSessionId string `protobuf:"bytes,1,opt,name=anghami_session_id,json=anghamiSessionId,proto3" json:"anghami_session_id,omitempty"`
}

func (x *LoginMethod_WithAnghami) Reset() {
	*x = LoginMethod_WithAnghami{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMethod_WithAnghami) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMethod_WithAnghami) ProtoMessage() {}

func (x *LoginMethod_WithAnghami) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMethod_WithAnghami.ProtoReflect.Descriptor instead.
func (*LoginMethod_WithAnghami) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{0, 6}
}

func (x *LoginMethod_WithAnghami) GetAnghamiSessionId() string {
	if x != nil {
		return x.AnghamiSessionId
	}
	return ""
}

type LoginResponse_SignupDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// was_anghami_user will be true if the user was an existing anghami user
	WasAnghamiUser bool `protobuf:"varint,1,opt,name=was_anghami_user,json=wasAnghamiUser,proto3" json:"was_anghami_user,omitempty"`
	// was_osn_user will be true if the user was an existing osn user
	WasOsnUser bool `protobuf:"varint,2,opt,name=was_osn_user,json=wasOsnUser,proto3" json:"was_osn_user,omitempty"`
	// anghami_identifier can be used as a label for the match account screen
	AnghamiIdentifier string `protobuf:"bytes,3,opt,name=anghami_identifier,json=anghamiIdentifier,proto3" json:"anghami_identifier,omitempty"`
	// osn_identifier can be used as a label for the match account screen
	OsnIdentifier string `protobuf:"bytes,4,opt,name=osn_identifier,json=osnIdentifier,proto3" json:"osn_identifier,omitempty"`
}

func (x *LoginResponse_SignupDetails) Reset() {
	*x = LoginResponse_SignupDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse_SignupDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse_SignupDetails) ProtoMessage() {}

func (x *LoginResponse_SignupDetails) ProtoReflect() protoreflect.Message {
	mi := &file_anghamak_osn_auth_v1_login_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse_SignupDetails.ProtoReflect.Descriptor instead.
func (*LoginResponse_SignupDetails) Descriptor() ([]byte, []int) {
	return file_anghamak_osn_auth_v1_login_proto_rawDescGZIP(), []int{2, 0}
}

func (x *LoginResponse_SignupDetails) GetWasAnghamiUser() bool {
	if x != nil {
		return x.WasAnghamiUser
	}
	return false
}

func (x *LoginResponse_SignupDetails) GetWasOsnUser() bool {
	if x != nil {
		return x.WasOsnUser
	}
	return false
}

func (x *LoginResponse_SignupDetails) GetAnghamiIdentifier() string {
	if x != nil {
		return x.AnghamiIdentifier
	}
	return ""
}

func (x *LoginResponse_SignupDetails) GetOsnIdentifier() string {
	if x != nil {
		return x.OsnIdentifier
	}
	return ""
}

var File_anghamak_osn_auth_v1_login_proto protoreflect.FileDescriptor

var file_anghamak_osn_auth_v1_login_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2f, 0x6f, 0x73, 0x6e, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2e, 0x6f, 0x73, 0x6e,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x22, 0xf8, 0x07, 0x0a, 0x0b, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d,
	0x61, 0x6b, 0x2e, 0x6f, 0x73, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x56, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2e, 0x6f,
	0x73, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b,
	0x2e, 0x6f, 0x73, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x4c, 0x0a,
	0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2e, 0x6f, 0x73, 0x6e, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x48,
	0x00, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x43, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x67,
	0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2e, 0x6f, 0x73, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x65,
	0x12, 0x50, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2e,
	0x6f, 0x73, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x69, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2e, 0x6f,
	0x73, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6e, 0x67, 0x68, 0x61,
	0x6d, 0x69, 0x48, 0x00, 0x52, 0x07, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x69, 0x1a, 0x33, 0x0a,
	0x09, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f,
	0x74, 0x70, 0x1a, 0x46, 0x0a, 0x0f, 0x57, 0x69, 0x74, 0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x1a, 0x22, 0x0a, 0x0a, 0x57, 0x69,
	0x74, 0x68, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x5a,
	0x0a, 0x0c, 0x57, 0x69, 0x74, 0x68, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x23,
	0x0a, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x6b, 0x0a, 0x09, 0x57, 0x69,
	0x74, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x23, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x3b, 0x0a, 0x0b,
	0x57, 0x69, 0x74, 0x68, 0x41, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x69, 0x12, 0x2c, 0x0a, 0x12, 0x61,
	0x6e, 0x67, 0x68, 0x61, 0x6d, 0x69, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x69,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x22, 0x54, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x6e, 0x67, 0x68,
	0x61, 0x6d, 0x61, 0x6b, 0x2e, 0x6f, 0x73, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xc4, 0x04, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x58, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x67, 0x68, 0x61,
	0x6d, 0x61, 0x6b, 0x2e, 0x6f, 0x73, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x73, 0x69, 0x67,
	0x6e, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e,
	0x12, 0x27, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x73, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0xb1, 0x01, 0x0a,
	0x0d, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x77, 0x61, 0x73, 0x5f, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x69, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x77, 0x61, 0x73, 0x41, 0x6e, 0x67,
	0x68, 0x61, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x61, 0x73, 0x5f,
	0x6f, 0x73, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x77, 0x61, 0x73, 0x4f, 0x73, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x6e,
	0x67, 0x68, 0x61, 0x6d, 0x69, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x69, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x73, 0x6e,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x73, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x22, 0x3a, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x70, 0x0a, 0x14,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x1c,
	0x0a, 0x1a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x1b,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x1a, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x76, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x76, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x2d, 0x0a, 0x17, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x16,
	0x74, 0x76, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x65, 0x6c,
	0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x74, 0x76,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x6b, 0x69, 0x70, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c,
	0x65, 0x42, 0xd9, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d,
	0x61, 0x6b, 0x2e, 0x6f, 0x73, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x42, 0x0a,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x69,
	0x2f, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2f, 0x6f, 0x73, 0x6e, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41,
	0x4f, 0x41, 0xaa, 0x02, 0x14, 0x41, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x2e, 0x4f, 0x73,
	0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x41, 0x6e, 0x67, 0x68,
	0x61, 0x6d, 0x61, 0x6b, 0x5c, 0x4f, 0x73, 0x6e, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x20, 0x41, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x5c, 0x4f, 0x73, 0x6e, 0x5c,
	0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x41, 0x6e, 0x67, 0x68, 0x61, 0x6d, 0x61, 0x6b, 0x3a, 0x3a,
	0x4f, 0x73, 0x6e, 0x3a, 0x3a, 0x41, 0x75, 0x74, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_anghamak_osn_auth_v1_login_proto_rawDescOnce sync.Once
	file_anghamak_osn_auth_v1_login_proto_rawDescData = file_anghamak_osn_auth_v1_login_proto_rawDesc
)

func file_anghamak_osn_auth_v1_login_proto_rawDescGZIP() []byte {
	file_anghamak_osn_auth_v1_login_proto_rawDescOnce.Do(func() {
		file_anghamak_osn_auth_v1_login_proto_rawDescData = protoimpl.X.CompressGZIP(file_anghamak_osn_auth_v1_login_proto_rawDescData)
	})
	return file_anghamak_osn_auth_v1_login_proto_rawDescData
}

var file_anghamak_osn_auth_v1_login_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_anghamak_osn_auth_v1_login_proto_goTypes = []interface{}{
	(*LoginMethod)(nil),                 // 0: anghamak.osn.auth.v1.LoginMethod
	(*LoginRequest)(nil),                // 1: anghamak.osn.auth.v1.LoginRequest
	(*LoginResponse)(nil),               // 2: anghamak.osn.auth.v1.LoginResponse
	(*RefreshTokenRequest)(nil),         // 3: anghamak.osn.auth.v1.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),        // 4: anghamak.osn.auth.v1.RefreshTokenResponse
	(*ValidateAccessTokenRequest)(nil),  // 5: anghamak.osn.auth.v1.ValidateAccessTokenRequest
	(*ValidateAccessTokenResponse)(nil), // 6: anghamak.osn.auth.v1.ValidateAccessTokenResponse
	(*GenerateLoginCodeRequest)(nil),    // 7: anghamak.osn.auth.v1.GenerateLoginCodeRequest
	(*GenerateLoginCodeResponse)(nil),   // 8: anghamak.osn.auth.v1.GenerateLoginCodeResponse
	(*ConsumeLoginCodeRequest)(nil),     // 9: anghamak.osn.auth.v1.ConsumeLoginCodeRequest
	(*ConsumeLoginCodeResponse)(nil),    // 10: anghamak.osn.auth.v1.ConsumeLoginCodeResponse
	(*GetAppConfigurationRequest)(nil),  // 11: anghamak.osn.auth.v1.GetAppConfigurationRequest
	(*GetAppConfigurationResponse)(nil), // 12: anghamak.osn.auth.v1.GetAppConfigurationResponse
	(*LoginMethod_WithEmail)(nil),       // 13: anghamak.osn.auth.v1.LoginMethod.WithEmail
	(*LoginMethod_WithPhoneNumber)(nil), // 14: anghamak.osn.auth.v1.LoginMethod.WithPhoneNumber
	(*LoginMethod_WithGoogle)(nil),      // 15: anghamak.osn.auth.v1.LoginMethod.WithGoogle
	(*LoginMethod_WithFacebook)(nil),    // 16: anghamak.osn.auth.v1.LoginMethod.WithFacebook
	(*LoginMethod_WithApple)(nil),       // 17: anghamak.osn.auth.v1.LoginMethod.WithApple
	(*LoginMethod_WithLoginCode)(nil),   // 18: anghamak.osn.auth.v1.LoginMethod.WithLoginCode
	(*LoginMethod_WithAnghami)(nil),     // 19: anghamak.osn.auth.v1.LoginMethod.WithAnghami
	(*LoginResponse_SignupDetails)(nil), // 20: anghamak.osn.auth.v1.LoginResponse.SignupDetails
}
var file_anghamak_osn_auth_v1_login_proto_depIdxs = []int32{
	13, // 0: anghamak.osn.auth.v1.LoginMethod.email:type_name -> anghamak.osn.auth.v1.LoginMethod.WithEmail
	14, // 1: anghamak.osn.auth.v1.LoginMethod.phone_number:type_name -> anghamak.osn.auth.v1.LoginMethod.WithPhoneNumber
	15, // 2: anghamak.osn.auth.v1.LoginMethod.google:type_name -> anghamak.osn.auth.v1.LoginMethod.WithGoogle
	16, // 3: anghamak.osn.auth.v1.LoginMethod.facebook:type_name -> anghamak.osn.auth.v1.LoginMethod.WithFacebook
	17, // 4: anghamak.osn.auth.v1.LoginMethod.apple:type_name -> anghamak.osn.auth.v1.LoginMethod.WithApple
	18, // 5: anghamak.osn.auth.v1.LoginMethod.login_code:type_name -> anghamak.osn.auth.v1.LoginMethod.WithLoginCode
	19, // 6: anghamak.osn.auth.v1.LoginMethod.anghami:type_name -> anghamak.osn.auth.v1.LoginMethod.WithAnghami
	0,  // 7: anghamak.osn.auth.v1.LoginRequest.login_method:type_name -> anghamak.osn.auth.v1.LoginMethod
	20, // 8: anghamak.osn.auth.v1.LoginResponse.signup_details:type_name -> anghamak.osn.auth.v1.LoginResponse.SignupDetails
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_anghamak_osn_auth_v1_login_proto_init() }
func file_anghamak_osn_auth_v1_login_proto_init() {
	if File_anghamak_osn_auth_v1_login_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_anghamak_osn_auth_v1_login_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateLoginCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateLoginCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeLoginCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeLoginCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMethod_WithEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMethod_WithPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMethod_WithGoogle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMethod_WithFacebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMethod_WithApple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMethod_WithLoginCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMethod_WithAnghami); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anghamak_osn_auth_v1_login_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse_SignupDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_anghamak_osn_auth_v1_login_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*LoginMethod_Email)(nil),
		(*LoginMethod_PhoneNumber)(nil),
		(*LoginMethod_Google)(nil),
		(*LoginMethod_Facebook)(nil),
		(*LoginMethod_Apple)(nil),
		(*LoginMethod_LoginCode)(nil),
		(*LoginMethod_Anghami)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_anghamak_osn_auth_v1_login_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anghamak_osn_auth_v1_login_proto_goTypes,
		DependencyIndexes: file_anghamak_osn_auth_v1_login_proto_depIdxs,
		MessageInfos:      file_anghamak_osn_auth_v1_login_proto_msgTypes,
	}.Build()
	File_anghamak_osn_auth_v1_login_proto = out.File
	file_anghamak_osn_auth_v1_login_proto_rawDesc = nil
	file_anghamak_osn_auth_v1_login_proto_goTypes = nil
	file_anghamak_osn_auth_v1_login_proto_depIdxs = nil
}
